#BlueJ class context
comment0.params=
comment0.target=void\ propagate()
comment0.text=\r\n\ Die\ Methode\ propagate()\ f\u00FChrt\ das\ Event\ aus.\ Dabei\ wird\ das\ Event\ aus\ der\r\n\ EventQueue\ gel\u00F6scht\ und\ die\ Queue-Laufzeit\ aktualisiert,\ sowie\ der\ Status\ des\ Signals\ ge\u00E4ndert.\r\n\ Danach\ werden\ alle\ Gatter\ neu\ berechnet,\ wenn\ entweder\ die\ EventQueue\ leer\ ist,\ oder\ der\ Zeitpunkt\r\n\ des\ Events\ vor\ dem\ ersten\ ersten\ Event\ der\ Queue\ liegt.\r\n
comment1.params=
comment1.target=int\ getEventTime()
comment1.text=\r\n\ Diese\ Methode\ gibt\ den\ Zeitpunkt,\ an\ dem\ das\ Event\ ausgef\u00FChrt\ werden\ soll\r\n\ zur\u00FCck.\r\n\ \r\n\ @return\ Teitpunkt\ des\ Events\r\n
comment2.params=
comment2.target=boolean\ getValue()
comment2.text=\r\n\ Diese\ Methode\ gibt\ den\ Wert\ zur\u00FCck\ auf\ den\ dieses\ Event\ betreffende\r\n\ Signal\ ge\u00E4ndert\ wird.\r\n\ \r\n\ @return\ Wert\ des\ Signals\r\n
comment3.params=e
comment3.target=boolean\ isEarlier(Event)
comment3.text=\r\n\ Berchnet,\ ob\ das\ zu\ vergleichende\ Event\ fr\u00FCher\ ist\ als\ das\ aktuelle\r\n\ @param\ e\ Event\r\n\ @return\ Is\ fr\u00FCher?\r\n
comment4.params=e
comment4.target=boolean\ willBeOverwritten(Event)
comment4.text=\r\n\ Pr\u00FCft,\ ob\ das\ aktuell\ Event\ mit\ dem\ Event\ e\ \u00FCberschrieben\ werden\ soll,\ .\ Dies\ ist\ der\ Fall,\ \r\n\ wenn\ beide\ Events,\ das\ selbe\ Signal\ betreffen\ und\ die\ Zeiten\ gleich\ sind\r\n\ @param\ e\ Event\r\n\ @return\ Soll\ \u00FCberschreiben\ werden?\r\n
numComments=5
